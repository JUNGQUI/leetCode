package com.jk.leetcode.simple.bit;

/*
Hamming Distance

숫자 두 개가 주어진다. x와 y를 2진수로 만들고 해당 값들의 bit 의 차이 개수를 구하라.
ex) x = 1, y = 4 -> 100 X 001 -> 총 2개의 숫자가 다르다 (1의 위치) 따라서 결과는 2

Score after flipping matrix

2차 배열 A 가 주어지는데, 각 row 는 bit 를 의미하고, 해당 matrix 에 대해서 반전만 가능하다.
반전 : row 혹은 column 을 선택해서 선택된 전체 row or column 에 대해 0 -> 1, 1 -> 0 으로 변환

일련의 과정을 거친 뒤 전체 matrix 에 대해 전체 bit 의 합이 최대인 값을 구하여라

{0, 0, 1, 1}    {1, 1, 0, 0}    {1, 1, 1, 0}    {1, 1, 1, 1} -> 15
{1, 0, 1, 0}    {1, 0, 1, 0}    {1, 0, 0, 0}    {1, 0, 0, 1} -> 9
{1, 1, 0, 0}    {1, 1, 0, 0}    {1, 1, 1, 0}    {1, 1, 1, 1} -> 15
 원본             0번 row 반전      2번 col 반전      3번 col 반전     39, 가장 큰 수이자 결과
 */